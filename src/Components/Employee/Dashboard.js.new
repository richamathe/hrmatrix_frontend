import React, { useState, useEffect } from 'react';
import { 
  Calendar, Clock, Bell, CheckCircle, XCircle, 
  AlertCircle, FileText, User, Briefcase, PieChart
} from 'lucide-react';
import { 
  Button, Card, Row, Col, Badge, Spinner
} from 'react-bootstrap';
import { Link } from 'react-router-dom';

const Dashboard = () => {
  const [loading, setLoading] = useState(false);
  
  // Mock data
  const leaveBalances = {
    casual: { total: 12, used: 3, remaining: 9 },
    sick: { total: 10, used: 2, remaining: 8 },
    earned: { total: 15, used: 0, remaining: 15 }
  };
  
  const todayAttendance = { 
    status: 'pending', 
    checkIn: '09:30 AM', 
    checkOut: '' 
  };
  
  const attendancePercentage = 85;
  const presentDays = 17;
  const totalWorkdays = 20;
  
  // Simplified check-in/out handlers
  const handleCheckIn = () => {
    console.log('Check-in clicked');
  };
  
  const handleCheckOut = () => {
    console.log('Check-out clicked');
  };
  
  if (loading) {
    return (
      <div className="d-flex justify-content-center align-items-center" style={{ height: '400px' }}>
        <Spinner animation="border" variant="primary" />
      </div>
    );
  }
  
  return (
    <div className="space-y-6">
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h2 className="text-2xl font-bold text-gray-800">Dashboard</h2>
        <div>
          <span className="text-muted me-2">
            {new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}
          </span>
        </div>
      </div>
      
      {/* Quick Actions */}
      <Card className="shadow-sm mb-4">
        <Card.Body>
          <Row className="g-4">
            <Col md={6}>
              <div className="bg-light rounded p-3">
                <div className="d-flex justify-content-between align-items-center">
                  <div>
                    <p className="text-muted mb-1">Today's Attendance</p>
                    <p className="fs-5 fw-semibold mb-0">
                      {todayAttendance.checkIn ? (
                        <>
                          <span className="text-success">Checked In: </span>
                          {todayAttendance.checkIn}
                        </>
                      ) : (
                        'Not Checked In'
                      )}
                      {todayAttendance.checkOut && (
                        <>
                          <span className="mx-2">|</span>
                          <span className="text-danger">Checked Out: </span>
                          {todayAttendance.checkOut}
                        </>
                      )}
                    </p>
                  </div>
                  <div>
                    {!todayAttendance.checkIn ? (
                      <Button 
                        variant="outline-primary"
                        onClick={handleCheckIn}
                      >
                        Check In
                      </Button>
                    ) : !todayAttendance.checkOut ? (
                      <Button 
                        variant="outline-danger"
                        onClick={handleCheckOut}
                      >
                        Check Out
                      </Button>
                    ) : (
                      <Badge bg="success">Completed</Badge>
                    )}
                  </div>
                </div>
              </div>
            </Col>
            
            <Col md={6}>
              <div className="bg-light rounded p-3">
                <div className="d-flex justify-content-between align-items-center">
                  <div>
                    <p className="text-muted mb-1">Leave Balance</p>
                    <p className="fs-5 fw-semibold mb-0">
                      {Object.entries(leaveBalances).map(([type, balance], index) => (
                        <span key={type} className={index > 0 ? 'ms-3' : ''}>
                          <span className="text-capitalize">{type}</span>: <span className="text-primary">{balance.remaining}</span>
                        </span>
                      ))}
                    </p>
                  </div>
                  <div>
                    <Link to="/employee/leave-balance">
                      <Button variant="outline-primary">
                        Apply Leave
                      </Button>
                    </Link>
                  </div>
                </div>
              </div>
            </Col>
          </Row>
        </Card.Body>
      </Card>
      
      <Row className="mb-4">
        <Col lg={12}>
          {/* Stats Cards */}
          <Row className="g-4 mb-4">
            <Col md={4}>
              <Card className="shadow-sm h-100">
                <Card.Body>
                  <div className="d-flex align-items-center mb-3">
                    <div className="rounded-circle bg-primary p-2 me-3">
                      <User className="text-white" size={20} />
                    </div>
                    <h5 className="card-title mb-0">Attendance</h5>
                  </div>
                  <h3 className="fw-bold text-primary mb-1">{attendancePercentage}%</h3>
                  <p className="text-muted small mb-2">Present: {presentDays} / {totalWorkdays} days</p>
                </Card.Body>
              </Card>
            </Col>
            
            <Col md={4}>
              <Card className="shadow-sm h-100">
                <Card.Body>
                  <div className="d-flex align-items-center mb-3">
                    <div className="rounded-circle bg-success p-2 me-3">
                      <Calendar className="text-white" size={20} />
                    </div>
                    <h5 className="card-title mb-0">Leave Status</h5>
                  </div>
                  <div className="d-flex justify-content-between mb-2">
                    <div>
                      <h3 className="fw-bold text-success mb-0">2</h3>
                      <p className="text-muted small">Approved</p>
                    </div>
                    <div>
                      <h3 className="fw-bold text-warning mb-0">1</h3>
                      <p className="text-muted small">Pending</p>
                    </div>
                    <div>
                      <h3 className="fw-bold text-danger mb-0">0</h3>
                      <p className="text-muted small">Rejected</p>
                    </div>
                  </div>
                </Card.Body>
              </Card>
            </Col>
            
            <Col md={4}>
              <Card className="shadow-sm h-100">
                <Card.Body>
                  <div className="d-flex align-items-center mb-3">
                    <div className="rounded-circle bg-info p-2 me-3">
                      <Bell className="text-white" size={20} />
                    </div>
                    <h5 className="card-title mb-0">Notifications</h5>
                  </div>
                  <h3 className="fw-bold text-info mb-1">3</h3>
                  <p className="text-muted small mb-0">Unread notifications</p>
                </Card.Body>
              </Card>
            </Col>
          </Row>
        </Col>
      </Row>
    </div>
  );
};

export default Dashboard;
